{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","SecurityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogAction.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","SecurityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","onChange","onSubmit","nextProps","errors","setState","e","target","name","value","preventDefault","newProject","start_date","end_date","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updatedProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_props","toDoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","boardContent","projectNotFoundMessage","role","boardAlgorithm","AddProjectTask","newTask","sumary","dueDate","addProjectTask","UpdateProjectTask","onSubmim","getProjectTask","create_At","updateProjectTask","patch","Landing","Register","newUser","username","password","confirmPassword","createNewUser","Login","loginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a76c4531.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/project\", project)\r\n        history.push(\"/dashboard\");\r\n\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n\r\n    }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get\r\n        (\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get\r\n            (`/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    if (window.confirm(\"Do you realy want to delete this project?\")) {\r\n        await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//types for backlog actions\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//types for security actions\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\n\r\nclass ProjectItem extends Component {\r\n\r\n    onDeleteClick = id => {\r\n        this.props.deleteProject(id);\r\n    }\r\n\r\n    render() {\r\n        const { project } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.projectName}</h3>\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item board\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                    </li>\r\n                                </Link>\r\n\r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(\r\n                                    this, project.projectIdentifier\r\n                                )}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n        </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react'\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getProjects();\r\n    }\r\n\r\n    render() {\r\n        const { projects } = this.props.project\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br />\r\n\r\n                            <CreateProjectButton />\r\n\r\n                            <br />\r\n                            <hr />\r\n                            {projects.map(project => (\r\n                                <ProjectItem key={project.id} project={project} />\r\n                            ))}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../SecurityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n    try {\r\n        //post => loginRequest\r\n        const res = await axios.post(\"/api/users/login\", loginRequest);\r\n        //extract token from res.data\r\n        const { token } = res.data;\r\n        //store the token in the localStorage\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        //set our token in header\r\n        setJWTToken(token);\r\n        //decode token on React\r\n        const decoded = jwt_decode(token);\r\n        //dispatch to our securityReducer\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n\r\n    logout() {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    };\r\n\r\n    render() {\r\n\r\n        const { validToken, user } = this.props.security\r\n\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n                            </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link \" to=\"/dashboard\">\r\n                            <i className=\"fa fa-user-circle-o mr-1\" />\r\n                            {user.fullName}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\" onClick={this.logout.bind(this)}>\r\n                            Logout\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link \" to=\"/register\">\r\n                            Sign Up\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login\">\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n        let headerLinks;\r\n\r\n        if (validToken && user) {\r\n            headerLinks = userIsAuthenticated\r\n        } else {\r\n            headerLinks = userIsNotAuthenticated\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Personal Project Management Tool\r\n                </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    {headerLinks}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            \"projectName\": \"\",\r\n            \"projectIdentifier\": \"\",\r\n            \"description\": \"\",\r\n            \"start_date\": \"\",\r\n            \"end_date\": \"\",\r\n            \"errors\": {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    // life cycle Hooke's\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProject = {\r\n            \"projectName\": this.state.projectName,\r\n            \"projectIdentifier\": this.state.projectIdentifier,\r\n            \"description\": this.state.description,\r\n            \"start_date\": this.state.start_date,\r\n            \"end_date\": this.state.end_date\r\n        };\r\n        this.props.createProject(newProject, this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"project\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={classnames(\"form-control form-control-lg \", {\r\n                                                \"is-invalid\": errors.projectName\r\n                                            })}\r\n                                            placeholder=\"Project Name\"\r\n                                            name=\"projectName\"\r\n                                            value={this.state.projectName}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={classnames(\"form-control form-control-lg \", {\r\n                                                \"is-invalid\": errors.projectIdentifier\r\n                                            })}\r\n                                            placeholder=\"Unique Project ID\"\r\n                                            name=\"projectIdentifier\"\r\n                                            value={this.state.projectIdentifier}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.projectIdentifier && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <textarea\r\n                                            className={classnames(\"form-control form-control-lg \", {\r\n                                                \"is-invalid\": errors.description\r\n                                            })}\r\n                                            placeholder=\"Project Description\"\r\n                                            name=\"description\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"start_date\"\r\n                                            value={this.state.start_date}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"end_date\"\r\n                                            value={this.state.end_date}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            }\r\n\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            }\r\n\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(\r\n                    project => project.projectIdentifier !== action.payload\r\n                )\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            }\r\n\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            }\r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(\r\n                    project_task => project_task.projectSequence !== action.payload)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n    if (payload) {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n    );\r\n} else {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware))\r\n    );\r\n}\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            \"id\": \"\",\r\n            \"projectName\": \"\",\r\n            \"projectIdentifier\": \"\",\r\n            \"description\": \"\",\r\n            \"start_date\": \"\",\r\n            \"end_date\": \"\",\r\n            \"errors\": {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n        const {\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        } = nextProps.project;\r\n\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n        const updatedProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        };\r\n\r\n        this.props.createProject(updatedProject, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"project\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={classnames(\"form-control form-control-lg \", {\r\n                                                \"is-invalid\": errors.projectName\r\n                                            })}\r\n                                            placeholder=\"Project Name\"\r\n                                            name=\"projectName\"\r\n                                            value={this.state.projectName}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            placeholder=\"Unique Project ID\"\r\n                                            name=\"projectIdentifier\"\r\n                                            value={this.state.projectIdentifier}\r\n                                            onChange={this.onChange}\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <textarea\r\n                                            className={classnames(\"form-control form-control-lg \", {\r\n                                                \"is-invalid\": errors.description\r\n                                            })}\r\n                                            placeholder=\"Project Description\"\r\n                                            name=\"description\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.onChange}\r\n                                        ></textarea>\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"start_date\"\r\n                                            value={this.state.start_date}\r\n                                            onChange={this.onChange} />\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"end_date\"\r\n                                            value={this.state.end_date}\r\n                                            onChange={this.onChange} />\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(UpdateProject);\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick(backlog_id, pt_id) {\r\n        this.props.deleteProjectTask(backlog_id, pt_id)\r\n    }\r\n\r\n    render() {\r\n        const { project_task } = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if (project_task.priority === 1) {\r\n            priorityClass = \"bg-danger text-light\"\r\n            priorityString = \"HIGH\"\r\n        }\r\n\r\n        if (project_task.priority === 2) {\r\n            priorityClass = \"bg-warning text-light\"\r\n            priorityString = \"MEDIUM\"\r\n        }\r\n\r\n        if (project_task.priority === 3) {\r\n            priorityClass = \"bg-info text-light\"\r\n            priorityString = \"LOW\"\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"card mb-1 bg-light\">\r\n                    <div className={`card-header text-primary ${priorityClass}`}>\r\n                        ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n                    </div>\r\n                    <div className=\"card-body bg-light\">\r\n                        <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                        <p className=\"card-text text-truncate \">\r\n                            {project_task.acceptanceCriteria}\r\n                        </p>\r\n                        <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\r\n                            View / Update\r\n        </Link>\r\n\r\n                        <button className=\"btn btn-danger ml-4\"\r\n                            onClick={this.onDeleteClick.bind(\r\n                                this,\r\n                                project_task.projectIdentifier,\r\n                                project_task.projectSequence\r\n                            )}>\r\n                            Delete\r\n        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task)\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    if (window.confirm(`Do you want to delete project task ${pt_id} ?`)) {\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n\r\n        const { project_tasks_props } = this.props;\r\n\r\n        const tasks = project_tasks_props.map(project_task => (\r\n            <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ));\r\n\r\n        let toDoItems = [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n\r\n        for (let i = 0; i < tasks.length; i++) {\r\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n                toDoItems.push(tasks[i]);\r\n            }\r\n\r\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n                inProgressItems.push(tasks[i]);\r\n            }\r\n\r\n            if (tasks[i].props.project_task.status === \"DONE\") {\r\n                doneItems.push(tasks[i]);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-secondary text-white\">\r\n                                    <h3>TO DO</h3>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {toDoItems}\r\n\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-primary text-white\">\r\n                                    <h3>In Progress</h3>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {inProgressItems}\r\n\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <div className=\"card text-center mb-2\">\r\n                                <div className=\"card-header bg-success text-white\">\r\n                                    <h3>Done</h3>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {doneItems}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from './Backlog';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogAction\";\r\n\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { project_tasks } = this.props.backlog;\r\n        const { errors } = this.state;\r\n\r\n        let boardContent;\r\n\r\n        const boardAlgorithm = (errors, project_tasks) => {\r\n            if (project_tasks.length < 1) {\r\n                if (errors.projectNotFoundMessage) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectNotFoundMessage}\r\n                        </div>\r\n                    );\r\n                } else if (errors.projectIdentifier) {\r\n                    return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                            {errors.projectIdentifier}\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                            No project tasks on this board\r\n                        </div>\r\n                    );\r\n                }\r\n            } else {\r\n                return <Backlog project_tasks_props={project_tasks} />\r\n            }\r\n        };\r\n\r\n        boardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n                {boardContent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const { id } = this.props.match.params;\r\n\r\n        this.state = {\r\n            \"sumary\": \"\",\r\n            \"acceptanceCriteria\": \"\",\r\n            \"status\": \"\",\r\n            \"priority\": 0,\r\n            \"dueDate\": \"\",\r\n            \"projectIdentifier\": id,\r\n            \"errors\": {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    //onChange\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    //onSubmit\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const newTask = {\r\n            \"sumary\": this.state.sumary,\r\n            \"acceptanceCriteria\": this.state.acceptanceCriteria,\r\n            \"status\": this.state.status,\r\n            \"priority\": this.state.priority,\r\n            \"dueDate\": this.state.dueDate\r\n        };\r\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"add-PBI\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                    Back to Project Board\r\n                        </Link>\r\n                                <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                                <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={classnames(\"form-control form-control-lg\", {\r\n                                                \"is-invalid\": errors.sumary\r\n                                            })}\r\n                                            name=\"sumary\"\r\n                                            placeholder=\"Project Task summary\"\r\n                                            value={this.state.sumary}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {\r\n                                            errors.sumary && (\r\n                                                <div className=\"invalid-feedback\">{errors.sumary}</div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea\r\n                                            className=\"form-control form-control-lg\"\r\n                                            placeholder=\"Acceptance Criteria\"\r\n                                            name=\"acceptanceCriteria\"\r\n                                            value={this.state.acceptanceCriteria}\r\n                                            onChange={this.onChange}\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    <h6>Due Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"dueDate\"\r\n                                            value={this.state.dueDate}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"priority\"\r\n                                            value={this.state.priority}\r\n                                            onChange={this.onChange}\r\n                                        >\r\n                                            <option value={0}>Select Priority</option>\r\n                                            <option value={1}>High</option>\r\n                                            <option value={2}>Medium</option>\r\n                                            <option value={3}>Low</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"status\"\r\n                                            value={this.state.status}\r\n                                            onChange={this.onChange}\r\n                                        >\r\n                                            <option value=\"\">Select Status</option>\r\n                                            <option value=\"TO_DO\">TO DO</option>\r\n                                            <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                            <option value=\"DONE\">DONE</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogAction\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            \"id\": \"\",\r\n            \"projectSequence\": \"\",\r\n            \"sumary\": \"\",\r\n            \"acceptanceCriteria\": \"\",\r\n            \"status\": \"\",\r\n            \"priority\": \"\",\r\n            \"dueDate\": \"\",\r\n            \"projectIdentifier\": \"\",\r\n            \"create_At\": \"\",\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmim = this.onSubmim.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { backlog_id, pt_id } = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            sumary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        } = nextProps.project_task;\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            sumary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n        });\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmim(e) {\r\n        e.preventDefault()\r\n\r\n        const updateProjectTask = {\r\n            \"id\": this.state.id,\r\n            \"projectSequence\": this.state.projectSequence,\r\n            \"sumary\": this.state.sumary,\r\n            \"acceptanceCriteria\": this.state.acceptanceCriteria,\r\n            \"status\": this.state.status,\r\n            \"priority\": this.state.priority,\r\n            \"dueDate\": this.state.dueDate,\r\n            \"projectIdentifier\": this.state.projectIdentifier,\r\n            \"create_At\": this.state.create_At\r\n        }\r\n        //console.log(updateProjectTask);\r\n        this.props.updateProjectTask(\r\n            this.state.projectIdentifier,\r\n            this.state.projectSequence,\r\n            updateProjectTask,\r\n            this.props.history\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"add-PBI\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                                    Back to Project Board\r\n                        </Link>\r\n                                <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                                <p className=\"lead text-center\">\r\n                                    Project Name: {this.state.projectIdentifier}----\r\n                                Project Task Id: {this.state.projectSequence}</p>\r\n                                <form onSubmit={this.onSubmim}>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className={classnames(\"form-control form-control-lg\", {\r\n                                                \"is-invalid\": errors.sumary\r\n                                            })}\r\n                                            name=\"sumary\"\r\n                                            placeholder=\"Project Task summary\"\r\n                                            value={this.state.sumary}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {\r\n                                            errors.sumary && (\r\n                                                <div className=\"invalid-feedback\">{errors.sumary}</div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <textarea\r\n                                            className=\"form-control form-control-lg\"\r\n                                            placeholder=\"Acceptance Criteria\"\r\n                                            name=\"acceptanceCriteria\"\r\n                                            value={this.state.acceptanceCriteria}\r\n                                            onChange={this.onChange}\r\n                                        ></textarea>\r\n                                    </div>\r\n                                    <h6>Due Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"dueDate\"\r\n                                            value={this.state.dueDate}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"priority\"\r\n                                            value={this.state.priority}\r\n                                            onChange={this.onChange}\r\n                                        >\r\n                                            <option value={0}>Select Priority</option>\r\n                                            <option value={1}>High</option>\r\n                                            <option value={2}>Medium</option>\r\n                                            <option value={3}>Low</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"status\"\r\n                                            value={this.state.status}\r\n                                            onChange={this.onChange}\r\n                                        >\r\n                                            <option value=\"\">Select Status</option>\r\n                                            <option value=\"TO_DO\">TO DO</option>\r\n                                            <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                            <option value=\"DONE\">DONE</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask);\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass Landing extends Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start you own\r\n                        </p>\r\n                                <hr />\r\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                    Sign Up\r\n                        </Link>\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                        </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react';\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            \"username\": \"\",\r\n            \"fullName\": \"\",\r\n            \"password\": \"\",\r\n            \"confirmPassword\": \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            \"username\": this.state.username,\r\n            \"fullName\": this.state.fullName,\r\n            \"password\": this.state.password,\r\n            \"confirmPassword\": this.state.confirmPassword\r\n        };\r\n\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.fullName\r\n                                        })}\r\n                                        placeholder=\"Full Name\"\r\n                                        name=\"fullName\"\r\n                                        value={this.state.fullName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.fullName && (\r\n                                            <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })}\r\n                                        placeholder=\"Email Address (Username)\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.username && (\r\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.confirmPassword\r\n                                        })}\r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\"\r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.confirmPassword && (\r\n                                            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            \"username\": \"\",\r\n            \"password\": \"\",\r\n            \"errors\": {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const loginRequest = {\r\n            \"username\": this.state.username,\r\n            \"password\": this.state.password\r\n        };\r\n\r\n        this.props.login(loginRequest);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })}\r\n                                        placeholder=\"Email Address\"\r\n                                        name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.username && (\r\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\r\n    <Route\r\n        {...otherProps}\r\n        render={props => security.validToken === true ?\r\n            (<Component {...props} />) :\r\n            (<Redirect to=\"login\" />)}\r\n    />\r\n);\r\n\r\nSecureRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(SecureRoute);\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./SecurityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from './SecurityUtils/SecureRoute';\n\n\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            //Public Routes\n          }\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            //Private Routes\n          }\n\n          <Switch>\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\n            <SecureRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n            <SecureRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n            <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n            <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}